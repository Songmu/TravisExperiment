#!/usr/bin/env perl
use 5.014;
use strict;
use warnings;
use HTTP::Tiny;
use JSON::PP;

my $OWNER = 'Songmu';
my $REPO  = 'TravisExperiment';

sub get_pr_num_and_branch {
    my @commits = `git show HEAD`;

    if ($commits[1] !~ /^Merge/) {
        return;
    }
    my $commit_msg = $commits[5];
    my ($pr_num, $branch) = $commit_msg =~ /^\s+Merge pull request #([0-9]+) from (.*)$/;

    my $res = HTTP::Tiny->new->get(
        sprintf 'https://api.github.com/repos/%s/%s/pulls/%d?state=closed', $OWNER, $REPO, $pr_num
    );
    unless ($res->{success}) {
        warn 'API request failed';
        return;
    }
    my $data = decode_json $res->{content};
    my $label = $data->{head}{label};
    $label =~ s!:!/!; # $user:branch/name -> $user/branch/name

    if ($label ne $branch) {
        return;
    }
    my $reg = quotemeta $OWNER;
    $branch =~ s!^$reg/!!;

    $data->{head}{ref};
}

sub tag_name_from_branch {
    my $branch = shift;

    my ($tag) = $branch =~ m!([^/]+)$!;
    $tag;
}

main();

sub main {
    my $branch = get_pr_num_and_branch;
    unless ($branch) {
        say 'not a merged commit';
        return;
    }
    my $tag = tag_name_from_branch($branch);
    unless ($tag) {
        say 'not a tagify target';
        return;
    }
}

